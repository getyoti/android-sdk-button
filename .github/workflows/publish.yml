name: Publish Release

on: 
  push:
    branches:
      - master

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Cache gradle dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle
        key: ${{ runner.os }}-gradle${{ hashFiles('gradle/wrapper/gradle-wrapper.properties')}}-${{ hashFiles('gradle.properties')}}
        restore-keys: |
          ${{ runner.os }}-gradle${{ hashFiles('gradle/wrapper/gradle-wrapper.properties')}}-
          ${{ runner.os }}-
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Run tests with Gradle
      run: ./gradlew testDebug --no-daemon
    - name: Archive test results
      uses: actions/upload-artifact@v1
      if: always()
      with:
        name: test-results
        path: "yoti-sdk/build/reports/tests/"

    - name: Build sample-1
      run: ./gradlew sample-app:assembleDebug --no-daemon
    - name: Upload sample-1
      uses: actions/upload-artifact@v1
      with:
        name: sample-1
        path: "sample-app/build/outputs/apk/"

    - name: Build sample-2
      run: ./gradlew sample-app-2:assembleDebug --no-daemon
    - name: Upload sample-2
      uses: actions/upload-artifact@v1
      with:
        name: sample-2
        path: "sample-app-2/build/outputs/apk/"

  deploy:
    runs-on: ubuntu-latest
    needs: check

    steps:
    - uses: actions/checkout@v1
    - name: Cache gradle dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle
        key: ${{ runner.os }}-gradle${{ hashFiles('gradle/wrapper/gradle-wrapper.properties')}}-${{ hashFiles('gradle.properties')}}
        restore-keys: |
          ${{ runner.os }}-gradle${{ hashFiles('gradle/wrapper/gradle-wrapper.properties')}}-
          ${{ runner.os }}-
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Publish to maven
      env:
        sonatypeUsername: ${{ secrets.sonatypeUsername }}
        sonatypePassword: ${{ secrets.sonatypePassword }}
        signingKey: ${{ secrets.signingPrivateKey }}
        signingPassword: ${{ secrets.signingPrivateKeyPassword }}
      run: ./gradlew publishAarReleasePublicationToMavenCentralRepository closeAndReleaseRepository "-PsonatypeUsername=$sonatypeUsername" "-PsonatypePassword=$sonatypePassword" "-PinMemorySigningKey=$signingKey" "-PinMemoryKeyPassword=$signingPassword" --no-daemon

  tag:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - uses: actions/checkout@v1
    - name: Add tag
      run: |
        CURRENT_VERSION=`cat gradle.properties | grep "pomVersion\s*=" | sed "s/pomVersion\s*=//"`
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a v$CURRENT_VERSION -m "Version $CURRENT_VERSION deployed by Github Actions"
    - name: Push tag
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tags: true

